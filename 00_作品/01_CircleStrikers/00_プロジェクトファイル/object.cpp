//========================================================================================================
//
//オブジェクト処理[object.cpp]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "object.h"
#include "transform.h"

//静的メンバ変数を初期化する
std::vector<Object*> Object::m_vObject;

//========================================================================================================
//初期化処理
//========================================================================================================
void Object::Init()
{
	//コンポーネントの数分繰り返す
	for (unsigned int i = 0; i < this->m_vComponent.size(); i++)
	{
		//コンポーネントを初期する
		this->m_vComponent[i]->Init();
	}
}

//========================================================================================================
//終了処理
//========================================================================================================
void Object::Uninit()
{
	//コンポーネントの数分繰り返す
	for (unsigned int i = 0; i < this->m_vComponent.size(); i++)
	{
		//コンポーネントを終了する
		this->m_vComponent[i]->Uninit();
		delete this->m_vComponent[i];
	}

	//コンポーネントをクリアする
	this->m_vComponent.clear();
}

//========================================================================================================
//更新処理
//========================================================================================================
void Object::Update()
{
	//コンポーネントの数分繰り返す
	for (unsigned int i = 0; i < this->m_vComponent.size(); i++)
	{
		//コンポーネントを更新する
		this->m_vComponent[i]->Update();
	}
}

//========================================================================================================
//更新処理
//========================================================================================================
void Object::Draw()
{
	//コンポーネントの数分繰り返す
	for (unsigned int i = 0; i < this->m_vComponent.size(); i++)
	{
		//コンポーネントを描画する
		this->m_vComponent[i]->Draw();
	}
}