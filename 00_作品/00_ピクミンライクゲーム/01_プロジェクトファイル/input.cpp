//========================================================================================================
//
//入力処理[input.cpp]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "input.h"

//静的メンバ変数を初期化する
LPDIRECTINPUT8 Input::m_pInput = nullptr;   //入力

//========================================================================================================
//コンストラクタ
//========================================================================================================
Input::Input()
{
	//メンバ変数を初期化する
	m_pDevice = nullptr;   //デバイス
}

//========================================================================================================
//デストラクタ
//========================================================================================================
Input::~Input()
{
}

//=======================================================================================================
//初期化処理
//=======================================================================================================
HRESULT Input::Init(HINSTANCE hInstance, HWND hWnd)
{
	if (m_pInput == nullptr)
	{//入力がない場合
		//DirectInputオブジェクトを生成する
		if (FAILED(DirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, (void**)&m_pInput, NULL)))
		{
			return E_FAIL;
		}
	}

	return S_OK;
}

//=======================================================================================================
//終了処理
//=======================================================================================================
void Input::Uninit()
{
	//入力デバイスを破棄する
	if (m_pDevice != NULL)
	{
		m_pDevice->Unacquire();
		m_pDevice->Release();
		m_pDevice = NULL;
	}
}