//========================================================================================================
//
//ランキングシーン処理[scene_mode_ranking.cpp]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "scene_mode.h"
#include "scene.h"
#include "keyboard.h"
#include "joypad.h"
#include "prefab.h"
//#include "rank.h"

//========================================================================================================
//初期化処理
//========================================================================================================
void Ranking::Init()
{
	//背景を生成する
	Background2DPrefab::Create(Manager::Get()->GetTexture()->Get("ranking_00.png"));

	////順位を生成する
	//Rank::Create();

	//フェードを生成する
	FadePrefab::Create();
}

//========================================================================================================
//終了処理
//========================================================================================================
void Ranking::Uninit()
{
	//オブジェクトの一括破棄を行う
	Object::DestroyAll();
}

//========================================================================================================
//更新処理
//========================================================================================================
void Ranking::Update()
{
	//オブジェクトの一括更新を行う
	Object::UpdateAll();

	//操作処理を行う
	this->Control();
}

//========================================================================================================
//描画処理
//========================================================================================================
void Ranking::Draw()
{
	//オブジェクトの一括描画を行う
	Object::DrawAll();
}

//========================================================================================================
//操作
//========================================================================================================
void Ranking::Control()
{
	//----------------------------------------------------------------------------------------------------
	//入力処理を行う
	//----------------------------------------------------------------------------------------------------
	Keyboard* pKeyboard = Manager::Get()->GetKeyboard();   //キーボード
	Joypad* pJoypad = Manager::Get()->GetJoypad();   //ジョイパッド

	//SPASEキーを確認する
	if (pKeyboard->GetTrigger(DIK_SPACE) || pJoypad->GetTrigger(Joypad::JOYKEY::IS_A, 0))
	{//SPASEキーが押された場合
		//終了フラグを立てる
		this->GetScene()->Next(Scene::MODE::IS_TITLE);
	}
}