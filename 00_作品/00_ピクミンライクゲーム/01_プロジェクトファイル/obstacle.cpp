//========================================================================================================
//
//障害物の処理[obstacle.cpp]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "obstacle.h"
#include "transform.h"

//静的メンバ変数を初期化する
const D3DXVECTOR3 Obstacle::SUB_SCALE = { 0.05f, 0.05f, 0.05f };   //拡大率の減少量

//========================================================================================================
//初期化処理
//========================================================================================================
void Obstacle::Init()
{

}

//========================================================================================================
//更新処理
//========================================================================================================
void Obstacle::Update()
{
	//破壊フラグを確認する
	if (this->m_isBreak)
	{
		//拡大率を小さくする
		Transform* pTransform = this->GetObj()->GetComponent<Transform>();
		D3DXVECTOR3 scale = pTransform->GetScale();
		scale -= Obstacle::SUB_SCALE;
		if (scale.x <= 0.0f)
		{//0になった場合
			//死亡フラグを立てる
			this->GetObj()->Death();
			return;
		}

		//拡大率を設定する
		pTransform->SetScale(scale);
	}
}

//========================================================================================================
//ヒット
//========================================================================================================
void Obstacle::Hit(int nDamage)
{
	//ヒットポイントからダメージ分減らす
	this->m_nHp -= nDamage;
	if (this->m_nHp <= 0)
	{//ヒットポイントが0になった場合
		//破壊フラグを立てる
		this->m_isBreak = true;
	}
}