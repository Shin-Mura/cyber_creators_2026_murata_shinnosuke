//========================================================================================================
//
// アイテムの処理[item.cpp]
// Author ItoKotaro
//
//========================================================================================================
#include "item.h"
#include "transform.h"
#include "heart.h"
#include "prefab.h"

const float Item::SIZE = 50.0f;
const float Item::FALL_SPEED = 2.0f;

//========================================================================================================
//初期化処理
//========================================================================================================
void Item::Init()
{
}

//========================================================================================================
//更新処理
//========================================================================================================
void Item::Update()
{
	//アイテムを下に落とす
	this->GetComponent<Transform>()->AddPos({ 0.0f, -FALL_SPEED, 0.0f });
}

//========================================================================================================
//衝突処理
//========================================================================================================
void Item::Collision(Object* pObject, Physics::CONTACT contact)
{
	if (pObject->GetTag() == Object::TAG::IS_STICK)
	{ //スティックに接触したとき
		//ヒットイベントを実行
		onHit();

		//自身を破棄する
		this->GetObj()->Death();
	}
}

//========================================================================================================
//ボール追加のヒット処理
//========================================================================================================
void AddBallItem::onHit() { BallPrefab::Create(); }

//========================================================================================================
//ブロッククリア
//========================================================================================================
void ClearBlockItem::onHit()
{
	//ブロックの挙動を取得する
	std::vector<Block*> vBlock = Component::Get<Block>();

	//ブロックの挙動の数分繰り返す
	for (unsigned int i = 0; i < vBlock.size(); i++)
	{
		//ヒット処理を行う
		vBlock[i]->Hit();
	}

}

//========================================================================================================
//補助バー
//========================================================================================================
void AssistBarItem::onHit() { AssistBarPrefab::Create(); }

//========================================================================================================
//ハート増加
//========================================================================================================
void AddHeartItem::onHit()
{
	//ハートを取得する
	Object* pHeart = Object::Find("HeartUI");

	//体力を0にする
	pHeart->GetComponent<HeartManager>()->RecoveryHeart();
}