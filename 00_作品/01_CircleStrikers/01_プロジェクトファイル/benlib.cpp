//========================================================================================================
//
//便利関数処理[benlib.h]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "benlib.h"

//========================================================================================================
//対象との距離の算出処理
//========================================================================================================
float DistanceToPos(D3DXVECTOR3 pos, D3DXVECTOR3 posTarget)
{
	//距離を計算する
	float fDistance = (posTarget.x - pos.x) * (posTarget.x - pos.x) + (posTarget.z - pos.z) * (posTarget.z - pos.z);

	//平方根を計算する
	fDistance = (float)sqrt(fDistance);

	//距離を返す
	return fDistance;
}

//========================================================================================================
//対象の方向の算出処理
//========================================================================================================
float DirectionToPos(D3DXVECTOR3 pos, D3DXVECTOR3 posTarget)
{
	//方向を計算する
	float fDirection = atan2f(posTarget.x - pos.x, posTarget.z - pos.z);

	//方向を返す
	return fDirection;
}

//========================================================================================================
//乱数の生成処理
//========================================================================================================
int CreateRand(int nMax, int nMin)
{
	//最低値を絶対値にする
	int nMinAbs = abs(nMin);

	//乱数を生成する
	int nRand = rand() % (nMax + nMinAbs);
	nRand -= nMinAbs;

	//乱数を生成する
	return nRand;
}