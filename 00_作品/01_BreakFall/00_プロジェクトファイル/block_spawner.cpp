//========================================================================================================
//
//ブロックスポナーの処理[block.cpp]
// Author Murata Shinnosuke
//
//========================================================================================================
#include "block_spawner.h"
#include "prefab.h"

//========================================================================================================
//初期化処理
//========================================================================================================
void BlockSpawner::Init()
{
	//
	for (int i = 0; i < 3; i++)
	{
		//ブロックをスポーンさせる
		this->Spawn((SCREEN_HEIGHT / 2) + (Block::SIZE.y / 2) - (Block::SIZE.y * i));
	}
}

//========================================================================================================
//更新処理
//========================================================================================================
void BlockSpawner::Update()
{
	//スポーンカウンターを進める
	this->m_nCntSpawn--;
	if (this->m_nCntSpawn <= 0)
	{//インターバルを超えた場合
		//ブロックをスポーンさせる
		this->Spawn((SCREEN_HEIGHT / 2) + (Block::SIZE.y / 2));
		this->m_nCntSpawn = BlockSpawner::INTERVAL;   //スポーンカウンターをリセット
	}
}

//=======================================================================================================
//ヒット処理
//=======================================================================================================
void BlockSpawner::Spawn(float fYAxis)
{
	//ブロックを生成する
	for (int i = 0; i < BlockSpawner::NUM_SPAWN; i++)
	{
		//乱数を生成する
		if (Benlib::CreateRand(3, 0) == 0)
		{
			//次のループに移行する
			continue;
		}

		//ブロックを生成する
		BlockPrefab::Create({ 0.0f - ((Block::SIZE.x * BlockSpawner::NUM_SPAWN) / 2) + (Block::SIZE.x / 2) + (Block::SIZE.x * i), fYAxis + (Block::SIZE.y / 2), 0.0f });
	}
}